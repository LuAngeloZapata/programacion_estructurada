import mysql.connector
from mysql.connector import Error
import os



def conectar():
    try:
        conexion = mysql.connector.connect(
            host="localhost",
            user="root",
            password="",
            database="bd_agenda"
        )
        return conexion
    except Error as e:
        print(f"‚ö†Ô∏è Error al conectar a la base de datos: {e}")
        return None

def borrarPantalla():
    os.system("cls")

def esperarTecla():
    input("\nPresiona cualquier tecla para continuar...")

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Men√∫ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

def menu_Principal():
    print("\n\t\tüìí Agenda de Contactos")
    print("1Ô∏è‚É£ - Agregar contacto")
    print("2Ô∏è‚É£ - Mostrar todos los contactos")
    print("3Ô∏è‚É£ - Buscar contacto por nombre")
    print("4Ô∏è‚É£ - Modificar contacto")
    print("5Ô∏è‚É£ - Eliminar contacto")
    print("6Ô∏è‚É£ - Salir")
    return input("\nüëâ Elige una opci√≥n (1-6): ").strip()



def AgregarContactos():
    borrarPantalla()
    print("‚ûï Agregar Contacto")
    nombre = input("Nombre: ").strip().capitalize()
    telefono = input("üìû Tel√©fono: ").strip()
    correo = input("‚úâÔ∏è Correo: ").strip()

    conexion = conectar()
    if conexion is None:
        return
    try:
        cursor = conexion.cursor()
        sql = "INSERT INTO contactos (nombre, telefono, correo) VALUES (%s, %s, %s)"
        cursor.execute(sql, (nombre, telefono, correo))
        conexion.commit()
        print("‚úÖ Contacto agregado exitosamente.")
    except Error as e:
        print(f"‚ùå Error: {e}")
    finally:
        cursor.close()
        conexion.close()

def MostrarContactos():
    borrarPantalla()
    print("üìã Lista de Contactos")

    conexion = conectar()
    if conexion is None:
        return
    try:
        cursor = conexion.cursor()
        cursor.execute("SELECT * FROM contactos")
        resultados = cursor.fetchall()
        if resultados:
            print(f"{'ID':<5}{'Nombre':<20}{'Tel√©fono':<15}{'Correo':<30}")
            print("-"*70)
            for fila in resultados:
                print(f"{fila[0]:<5}{fila[1]:<20}{fila[2]:<15}{fila[3]:<30}")
        else:
            print("‚ùå No hay contactos registrados.")
    except Error as e:
        print(f"‚ùå Error: {e}")
    finally:
        cursor.close()
        conexion.close()

def BuscarContactos():
    borrarPantalla()
    print("üîç Buscar Contacto")
    nombre = input("Nombre a buscar: ").strip().capitalize()

    conexion = conectar()
    if conexion is None:
        return
    try:
        cursor = conexion.cursor()
        sql = "SELECT * FROM contactos WHERE nombre = %s"
        cursor.execute(sql, (nombre,))
        resultados = cursor.fetchall()
        if resultados:
            for fila in resultados:
                print(f"üë§ {fila[1]} - üìû {fila[2]} - ‚úâÔ∏è {fila[3]}")
        else:
            print("‚ùå No se encontr√≥ el contacto.")
    except Error as e:
        print(f"‚ùå Error: {e}")
    finally:
        cursor.close()
        conexion.close()

def ModificarContacto():
    borrarPantalla()
    print("‚úèÔ∏è Modificar Contacto")
    nombre = input("Nombre del contacto a modificar: ").strip().capitalize()

    conexion = conectar()
    if conexion is None:
        return
    try:
        cursor = conexion.cursor()
        sql = "SELECT * FROM contactos WHERE nombre = %s"
        cursor.execute(sql, (nombre,))
        contacto = cursor.fetchone()
        if contacto:
            print(f"\nüìå Actual: {contacto[1]} - {contacto[2]} - {contacto[3]}")
            nuevo_tel = input("Nuevo tel√©fono (deja vac√≠o para no cambiar): ").strip() or contacto[2]
            nuevo_correo = input("Nuevo correo (deja vac√≠o para no cambiar): ").strip() or contacto[3]
            sql_update = "UPDATE contactos SET telefono = %s, correo = %s WHERE id = %s"
            cursor.execute(sql_update, (nuevo_tel, nuevo_correo, contacto[0]))
            conexion.commit()
            print("‚úÖ Contacto modificado.")
        else:
            print("‚ùå Contacto no encontrado.")
    except Error as e:
        print(f"‚ùå Error: {e}")
    finally:
        cursor.close()
        conexion.close()

def EliminarContacto():
    borrarPantalla()
    print("üóëÔ∏è Eliminar Contacto")
    nombre = input("Nombre del contacto a eliminar: ").strip().capitalize()

    conexion = conectar()
    if conexion is None:
        return
    try:
        cursor = conexion.cursor()
        cursor.execute("SELECT * FROM contactos WHERE nombre = %s", (nombre,))
        contacto = cursor.fetchone()
        if contacto:
            print(f"\nüìå {contacto[1]} - {contacto[2]} - {contacto[3]}")
            confirmacion = input("¬øDeseas eliminar este contacto? (si/no): ").strip().lower()
            if confirmacion == "si":
                cursor.execute("DELETE FROM contactos WHERE id = %s", (contacto[0],))
                conexion.commit()
                print("‚úÖ Contacto eliminado.")
        else:
            print("‚ùå Contacto no encontrado.")
    except Error as e:
        print(f"‚ùå Error: {e}")
    finally:
        cursor.close()
        conexion.close()
